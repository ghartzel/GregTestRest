/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/5.0/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
    id 'java'
    id 'com.gradle.build-scan' version '2.0.2'
    id 'org.springframework.boot' version '2.0.5.RELEASE'
    id 'com.benjaminsproule.swagger' version '1.0.6'
    
}



repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}
dependencies {

    implementation 'org.springframework.boot:spring-boot-dependencies:2.0.5.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-web:2.0.5.RELEASE'
    //implementation 'org.springframework.boot:spring-boot-starter-logging'
    //implementation 'org.springframework.boot:spring-boot-starter-log4j2' 
    implementation 'io.springfox:springfox-swagger2:2.9.2'
    implementation 'io.springfox:springfox-swagger-ui:2.9.2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

	developmentOnly("org.springframework.boot:spring-boot-devtools:2.0.5.RELEASE")

    components {
        withModule('org.springframework:spring-beans') {
            allVariants {
                withDependencyConstraints {
                    // Need to patch constraints because snakeyaml is an optional dependency
                    it.findAll { it.name == 'snakeyaml' }.each { it.version { strictly '1.19' } }
                }
            }
        }
    }
}

buildScan {

    // always accept the terms of service
    termsOfServiceUrl = 'https://gradle.com/terms-of-service'
    termsOfServiceAgree = 'yes'

    // always publish a build scan
    publishAlways()
}

bootJar {
    mainClassName = 'com.example.springbootswagger2.configuration.Swagger2UiConfiguration'
}

//bootWar{
//	excludeDevtools = false
//}


swagger {
    apiSource {
        springmvc = true
        locations = [ 'com.greg.test.rest' ]
        schemes = [ 'http' ]
        host = 'localhost:8080'
        basePath = '/swagger2-demo'
        info {
            title = 'Swagger Gradle Plugin Sample'
            version = 'v1'
            // use markdown here because I'm using markdown for output,
            // if you need to use html or other markup language, you need to use your target language
            description = 'This is a sample.'
            termsOfService = 'http://www.example.com/termsOfService'
            contact {
                email = 'email@email.com'
                name = 'Name'
                url = 'http://www.example.com'
            }
            license {
                url = 'http://www.apache.org/licenses/LICENSE-2.0.html'
                name = 'Apache 2.0'
            }
        }
        outputFormats = ['yaml']
        swaggerDirectory = "${project.rootDir}/generated/swagger-ui"
        swaggerFileName = 'gregTestSwagger'
        attachSwaggerArtifact = true
    }
}